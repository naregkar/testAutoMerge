name: 'ManageJiraPR'
on:
  pull_request:
    types: [opened, edited, reopened]
    branches: 
      - master
  #pull_request_review:
  #  branches:
  #    - master
  #  types: [submitted]
  workflow_dispatch:
    types: ManageJira
env:
  #GITHUB_PR_TITLE: ${{github.event.pull_request.title}}
  GITHUB_PR_NUMBER: ${{github.event.pull_request.number}}
  GITHUB_WORKFLOW_ID: ${{github.run_id}}
 
 
jobs:
  read-jira-status:
    runs-on: ubuntu-latest
    
    steps:
    
    - name: Display Run ID
      run: echo $GITHUB_WORKFLOW_ID
    
    - name: Get Jira Issue ID
      run: |
            
            restApiPRTitle=$(curl \
                              -H "Accept: application/vnd.github.v3+json" \
                              https://api.github.com/repos/naregkar/testAutoMerge/pulls/$GITHUB_PR_NUMBER | jq '.title')
                
            parsedTitle="${restApiPRTitle%\"}"
            parsedTitle="${parsedTitle#\"}"         
      
            echo $parsedTitle
            JiraIdUnparsed=$parsedTitle
            JiraId=${JiraIdUnparsed%]*}
            JiraId=${JiraId:1}
            echo "jira_id=$JiraId" >> $GITHUB_ENV
            
            
    - name: Read Jira Issue Status and Assess the value
      id: retrieveJiraStatus    
      run: |
            restApiGET=$(curl --request GET \
                  --url 'https://naregkar.atlassian.net/rest/api/3/issue/${{ env.jira_id }}/' \
                  --user 'nareg.karamanoukian@picsart.com:oBJTrxuI3qf0Do1MBpGbBE87' \
                  --header 'Accept: application/json' | jq '.fields.status.name');                   

            echo "jiraIssue_status=$restApiGET" >> $GITHUB_ENV
      
            #echo "rest api echo is " $restApiGET
            
            curl -D- -u nareg.karamanoukian@picsart.com:oBJTrxuI3qf0Do1MBpGbBE87 \
                 -X PUT --data '{ "fields": { "customfield_10029" : "'"$GITHUB_WORKFLOW_ID"'" }}' \
                 -H "Content-Type: application/json" https://naregkar.atlassian.net/rest/api/3/issue/${{ env.jira_id }}
            
            #returnedStatus=${{ env.jiraIssue_status }}
            echo 'returned status is:'$restApiGET
            if [[ "$restApiGET" = "\"Ready to Merge\"" ]]; then
              echo "Finished.. Success"
            else
              echo "Not finished"
              exit 1
            fi  
      
      
